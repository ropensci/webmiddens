% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiddenHandler.R
\name{MiddenHandler}
\alias{MiddenHandler}
\alias{MiddenHandlerCrul}
\title{MiddenHandler}
\description{
midden handler
}
\details{
\itemize{
\item \code{MiddenHandler}: default handler
\item \code{MiddenHandlerCrul}: \code{crul} handler
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{request}}{an http request}

\item{\code{response}}{an http response}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MiddenHandler$new()}}
\item \href{#method-handle}{\code{MiddenHandler$handle()}}
\item \href{#method-clone}{\code{MiddenHandler$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{MiddenHandler} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiddenHandler$new(request, response = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{request}}{an http request}

\item{\code{response}}{an http response}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{MiddenHandler} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-handle"></a>}}
\if{latex}{\out{\hypertarget{method-handle}{}}}
\subsection{Method \code{handle()}}{
Handle the request (\code{request} given in \verb{$initialize()})
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiddenHandler$handle(webmockr_stub_found = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{webmockr_stub_found}}{(logical) whether a webmockr stub was found
or not. default: \code{FALSE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
handles a request, outcomes vary
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiddenHandler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[webmiddens:MiddenHandler]{webmiddens::MiddenHandler}} -> \code{MiddenHandlerCrul}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-clone}{\code{MiddenHandlerCrul$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="webmiddens" data-topic="MiddenHandler" data-id="handle">}\href{../../webmiddens/html/MiddenHandler.html#method-handle}{\code{webmiddens::MiddenHandler$handle()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="webmiddens" data-topic="MiddenHandler" data-id="initialize">}\href{../../webmiddens/html/MiddenHandler.html#method-initialize}{\code{webmiddens::MiddenHandler$initialize()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiddenHandlerCrul$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
